type: edu
files:
- name: src/rabbits/RabbitRace.java
  visible: true
  placeholders:
  - offset: 86
    length: 23
    placeholder_text: /*TODO_1*/ return null;
    initial_state:
      length: 23
      offset: 86
    initialized_from_dependency: false
    possible_answer: return new RabbitThread(i);
    selected: false
    status: Unchecked
  - offset: 165
    length: 23
    placeholder_text: /*TODO_2*/ return null;
    initial_state:
      length: 23
      offset: 165
    initialized_from_dependency: false
    possible_answer: |-
      RabbitRunnable runnable = new RabbitRunnable(i);
          return new Thread(runnable);
    selected: false
    status: Unchecked
  - offset: 272
    length: 23
    placeholder_text: /*TODO_3*/ return null;
    initial_state:
      length: 23
      offset: 272
    initialized_from_dependency: false
    possible_answer: |-
      return (startPosition % 2 == 0) ?
                  createThreadRabbit(startPosition) :
                  createRunnableRabbit(startPosition);
    selected: false
    status: Unchecked
  - offset: 353
    length: 10
    placeholder_text: /*TODO_4*/
    initial_state:
      length: 10
      offset: 353
    initialized_from_dependency: false
    possible_answer: rabbit.start();
    selected: false
    status: Unchecked
  text: |-
    package rabbits;

    class RabbitRace {

      public Thread createThreadRabbit(int i) {
        /*TODO_1*/ return null;
      }

      public Thread createRunnableRabbit(int i) {
        /*TODO_2*/ return null;
      }

      public Thread getCorrespondingRabbitImplementation(int startPosition) {
        /*TODO_3*/ return null;
      }

      public void makeTheRabbitRun(Thread rabbit) {
        /*TODO_4*/
      }

      public void race() {
        for (int i = 0; i < 10; i++) {
          Thread rabbit = getCorrespondingRabbitImplementation(i);
          makeTheRabbitRun(rabbit);
        }
      }

    }
  learner_created: false
- name: src/rabbits/RabbitRunnable.java
  visible: true
  text: |-
    package rabbits;

    class RabbitRunnable implements Runnable {
      private int nr;

      public RabbitRunnable(int nr) {
        this.nr = nr;
      }

      @Override
      public void run() {
        System.out.printf("Rabbit %s is running", nr);
      }
    }
  learner_created: false
- name: src/rabbits/RabbitThread.java
  visible: true
  text: |-
    package rabbits;

    class RabbitThread extends Thread {
      private int nr;

      public RabbitThread(int nr) {
        this.nr = nr;
      }

      @Override
      public void run() {
        System.out.printf("Rabbit %s is running", nr);
      }
    }
  learner_created: false
- name: test/rabbits/RabbitRaceTest.java
  visible: false
  text: |-
    package rabbits;

    import org.junit.Assert;
    import org.junit.Test;

    public class RabbitRaceTest {
      @Test
      public void shouldCreateRabbitRunnable() {
        RabbitRace rabbitRace = new RabbitRace();
        Thread thread = rabbitRace.getCorrespondingRabbitImplementation(1);

        Assert.assertTrue(thread instanceof Thread);
      }
    }
  learner_created: false
- name: test/rabbits/Test.java
  visible: false
  text: |
    package rabbits;

    public class Test {

      static class C {

      }

      @org.junit.Test
      public void t() {
        C c = (C) null;
        System.out.println(c);
      }
    }
  learner_created: false
status: Unchecked
record: -1
